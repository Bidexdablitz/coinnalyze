type Candle {
    eventType: String
    eventTime: String
    symbol: String
    open: String
    high: String
    low: String
    close: String
    volume: String
    trades: Int
    interval: String
    isFinal: Boolean
    quoteVolume: String
    buyVolume: String
    quoteBuyVolume: String
}
type Ticker {
    eventType: String
    eventTime: Int
    symbol: String
    priceChange: String
    priceChangePercent: String
    weightedAvg: String
    prevDayClose: String
    curDayClose: String
    closeTradeQuantity: String
    bestBid: String
    bestBidQnt: String
    bestAsk: String
    bestAskQnt: String
    open: String
    high: String
    low: String
    volume: String
    volumeQuote: String
    openTime: Int
    closeTime: Int
    firstTradeId: Int
    lastTradeId: Int
    totalTrades: Int
}

type User {
    name: String!
}
type Query {
    users: [User!]
    candles(symbol: String!): [Candle!]
}
type Mutation {
    addUser(name: String!): User
}
type Subscription {
    users: [User!]
    newUser: User!
    candle(symbol: String!): Candle
    tickers(symbols: [String!]!): [Ticker!]!
}
